{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAE9BC,EAAY,GAElBH,EAAKI,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAmCR,SAAyBD,GACN,IAAIE,SAASF,EAAMG,eAE3BC,SAAQ,CAACC,EAAOC,KACvBR,EAAUQ,GAAQC,OAAOF,EAAM,G,CAtCjCG,CAAgBR,GAKlB,SAAkCS,EAAMC,EAAQC,GAC9C,IAAIC,EAAW,EACXC,EAAqBF,EAEzBG,YAAW,KACT,MAAMC,EAAaC,aAAY,KAgCnC,IAAuBC,EAAUC,EA/BvBN,IAAaL,OAAOG,KA+BPO,EA1BHL,EA0BaM,EA1BHL,EA2BrB,IAAIM,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,IAGpCH,EAAQ,C,SAAEH,E,MAAUC,IAGtBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,KAjCtBM,MAAK,EAACP,SAAEA,EAAQC,MAAEA,MACjBO,EAAAhC,GAASiC,OAAOC,QACd,uBAAqBV,QAAiBC,MAAU,IAGnDU,OAAM,EAACX,SAAEA,EAAQC,MAAEA,MAClBO,EAAAhC,GAASiC,OAAOG,QACd,sBAAoBZ,QAAeC,MAAU,IAInDN,GAAY,EACZC,GAAsBJ,GAjBpBqB,cAAcf,EAiBU,GACzBN,EAAK,GACPE,E,CA7BHoB,CAAyBjC,EAAUW,KAAMX,EAAUY,OAAQZ,EAAUoB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nconst formValue = {};\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  createFormValue(event);\n\n  createMessageFromPromise(formValue.step, formValue.amount, formValue.delay);\n}\n\nfunction createMessageFromPromise(step, amount, delay) {\n  let position = 0;\n  let delayBeforePromise = delay;\n\n  setTimeout(() => {\n    const intervalId = setInterval(() => {\n      if (position === Number(amount)) {\n        clearInterval(intervalId);\n        return;\n      }\n\n      createPromise(position, delayBeforePromise)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n\n      position += 1;\n      delayBeforePromise += step;\n    }, step);\n  }, delay);\n}\n\nfunction createFormValue(event) {\n  const formData = new FormData(event.currentTarget);\n\n  formData.forEach((value, name) => {\n    formValue[name] = Number(value);\n  });\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve({ position, delay });\n    }\n\n    reject({ position, delay });\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$formValue","addEventListener","event","preventDefault","FormData","currentTarget","forEach","value","name","Number","$47d4ff9957288465$var$createFormValue","step","amount","delay1","position1","delayBeforePromise","setTimeout","intervalId","setInterval","position","delay","Promise","resolve","reject","Math","random","then","$parcel$interopDefault","Notify","success","catch","failure","clearInterval","$47d4ff9957288465$var$createMessageFromPromise"],"version":3,"file":"03-promises.7b165d02.js.map"}