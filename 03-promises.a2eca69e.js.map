{"mappings":"YAAA,IAAMA,EAAOC,SAASC,cAAc,SAE9BC,EAAY,GAElBH,EAAKI,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBA6BR,SAAyBD,GACN,IAAIE,SAASF,EAAMG,eAE3BC,SAAQ,SAACC,EAAOC,GACvBR,EAAUQ,GAAQC,OAAOF,E,IAhC3BG,CAAgBR,GAKgBS,EAHPX,EAAUW,KAGGC,EAHGZ,EAAUY,OAGLC,EAHab,EAAUa,MAIjEC,EAAW,EAEfC,YAAW,WACT,IAAMC,EAAaC,aAAY,WACzBH,IAAaL,OAAOG,IA0B9B,SAAuBM,EAAUL,GAC/B,OAAO,IAAIM,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,IAGpCH,EAAQ,CAAEF,WAAUL,UAGtBQ,EAAO,CAAEH,WAAUL,S,IA7BjBW,CAAcV,EAAUD,GACrBY,MAAK,SAAAC,G,IAAGR,EAAQQ,EAARR,SAAUS,EAAKD,EAALb,MACjBe,QAAQC,IAAI,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANH,EAAM,M,IAE3DI,OAAM,SAAAL,G,IAAGR,EAAQQ,EAARR,SAAUS,EAAKD,EAALb,MAClBe,QAAQC,IAAI,sBAAqCC,OAAfZ,EAAS,QAAYY,OAANH,EAAM,M,IAG3Db,GAAY,GAZVkB,cAAchB,E,GAafL,E,GACFE,GApBL,IAAkCF,EAAMC,EAAQC,EAC1CC,C","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nconst formValue = {};\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  createFormValue(event);\n\n  createMessageFromPromise(formValue.step, formValue.amount, formValue.delay);\n}\n\nfunction createMessageFromPromise(step, amount, delay) {\n  let position = 0;\n\n  setTimeout(() => {\n    const intervalId = setInterval(() => {\n      if (position === Number(amount)) {\n        clearInterval(intervalId);\n        return;\n      }\n\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n\n      position += 1;\n    }, step);\n  }, delay);\n}\n\nfunction createFormValue(event) {\n  const formData = new FormData(event.currentTarget);\n\n  formData.forEach((value, name) => {\n    formValue[name] = Number(value);\n  });\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve({ position, delay });\n    }\n\n    reject({ position, delay });\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$formValue","addEventListener","event","preventDefault","FormData","currentTarget","forEach","value","name","Number","$ce04d3a99e08e73b$var$createFormValue","step","amount","delay","position1","setTimeout","intervalId","setInterval","position","Promise","resolve","reject","Math","random","$ce04d3a99e08e73b$var$createPromise","then","param","_$delay","console","log","concat","catch","clearInterval"],"version":3,"file":"03-promises.a2eca69e.js.map"}