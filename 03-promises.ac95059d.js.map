{"mappings":"YAAA,IAAMA,EAAOC,SAASC,cAAc,SAE9BC,EAAY,GAElBH,EAAKI,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAgCR,SAAyBD,GACN,IAAIE,SAASF,EAAMG,eAE3BC,SAAQ,SAACC,EAAOC,GACvBR,EAAUQ,GAAQD,C,IAEpBE,QAAQC,IAAIV,E,CArCZW,CAAgBT,GAChBO,QAAQC,IAAIV,EAAUY,OACtBH,QAAQC,IAAIV,EAAUa,MACtBJ,QAAQC,IAAIV,EAAUc,QAcUD,EAZPb,EAAUa,KAYGC,EAZGd,EAAUc,OAAQd,EAAUY,MAajEG,EAAW,EACTC,EAAaC,aAAY,WAEzBF,IAAaG,OAAOJ,IAIxBC,GAAY,EACZN,QAAQC,IAAIK,GACZN,QAAQC,IAAIQ,OAAOJ,KALjBK,cAAcH,E,GAMfH,GAXL,IAAkCA,EAAMC,EAClCC,EACEC,C","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nconst formValue = {};\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  createFormValue(event);\n  console.log(formValue.delay);\n  console.log(formValue.step);\n  console.log(formValue.amount);\n\n  createMessageFromPromise(formValue.step, formValue.amount, formValue.delay);\n\n  // createPromise(1, formValue.delay)\n  //   .then(({ position, delay }) => {\n  //     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  //   })\n  //   .catch(({ position, delay }) => {\n  //     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  //   });\n  // console.log(createPromise(1, formValue.step));\n}\n\nfunction createMessageFromPromise(step, amount, delay) {\n  let position = 0;\n  const intervalId = setInterval(() => {\n    // createPromise(position, delay);\n    if (position === Number(amount)) {\n      clearInterval(intervalId);\n      return;\n    }\n    position += 1;\n    console.log(position);\n    console.log(Number(amount));\n  }, step);\n}\n\nfunction createFormValue(event) {\n  const formData = new FormData(event.currentTarget);\n\n  formData.forEach((value, name) => {\n    formValue[name] = value;\n  });\n  console.log(formValue);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n\n      reject({ position, delay });\n    }, delay);\n  });\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$formValue","addEventListener","event","preventDefault","FormData","currentTarget","forEach","value","name","console","log","$ce04d3a99e08e73b$var$createFormValue","delay","step","amount","position","intervalId","setInterval","Number","clearInterval"],"version":3,"file":"03-promises.ac95059d.js.map"}